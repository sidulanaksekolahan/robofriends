{"version":3,"sources":["reportWebVitals.js","components/Card.jsx","components/CardList.jsx","components/SearchBox.jsx","components/Scroll.jsx","components/ErrorBoundary.jsx","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","src","alt","CardList","robots","map","robot","SearchBox","props","type","placeholder","onChange","searchChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","fetch","response","json","filteredRobots","filter","toLocaleLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCSCQ,EAdF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAEtB,OACI,sBAAKC,UAAU,kDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,WAEpD,gCACI,6BAAKJ,IACL,4BAAIC,WCMLI,EAbE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAIhB,OACI,8BACKA,EAAOC,KAAI,SAAAC,GACR,OAAO,cAAC,EAAD,CAAMT,GAAIS,EAAMT,GAAIC,KAAMQ,EAAMR,KAAMC,MAAOO,EAAMP,OAAYO,EAAMT,UCI7EU,EAZG,SAACC,GACf,OACI,qBAAKR,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVS,KAAK,SACLC,YAAY,gBACZC,SAAUH,EAAMI,kBCCjBC,G,MARA,SAACL,GACZ,OACI,qBAAKM,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKT,EAAMU,aCqBJC,E,kDAtBX,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IACDY,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GAErBC,KAAKC,SAAS,CACVJ,UAAU,M,oBAIlB,WACI,OAAIG,KAAKJ,MAAMC,SACJ,2DAEJG,KAAKhB,MAAMU,a,GApBEQ,aC0DbC,E,kDAnDX,aAAe,IAAD,8BACV,gBAgBJC,eAAiB,SAACC,GAEd,EAAKJ,SAAS,CACVK,YAAaD,EAAME,OAAOC,SAlB9B,EAAKZ,MAAQ,CACThB,OAAQ,GACR0B,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAEhBG,MAAM,8CACD3C,MAAK,SAAA4C,GAAQ,OAAIA,EAASC,UAC1B7C,MAAK,SAAA6C,GAAI,OAAI,EAAKV,SAAS,CACxBrB,OAAQ+B,S,oBAWpB,WAEI,MAAgCX,KAAKJ,MAA7BhB,EAAR,EAAQA,OAAQ0B,EAAhB,EAAgBA,YAEVM,EAAiBhC,EAAOiC,QAAO,SAAA/B,GACjC,OAAOA,EAAMR,KAAKwC,oBAAoBC,SAClCT,EAAYQ,wBAGpB,OAAQlC,EAAOoC,OAIX,sBAAKxC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWY,aAAcY,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UAEI,cAAC,EAAD,CAAUxB,OAAQgC,WAT1B,6C,GApCEV,aCAlBe,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1B1D,M","file":"static/js/main.a8fbf47f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = ({ id, name, email}) => {\n\n    return (\n        <div className=\"tc bg-light-green dib br3 ma2 grow bw2 shadow-5\">\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\" />\n\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n \nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    \n    // if (true) throw new Error('Noooo');\n\n    return (\n        <div>\n            {robots.map(robot => {\n                return <Card id={robot.id} name={robot.name} email={robot.email} key={robot.id}/>\n            })}\n        </div>\n    );\n};\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = (props) => {\n    return (\n        <div className=\"pa2\">\n            <input \n                className=\"pa3 ba b--green bg-lightest-blue\"\n                type=\"search\" \n                placeholder=\"Search Robots\"\n                onChange={props.searchChange}/>\n        </div>\n    );\n};\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        // If any error occur then this method will be triggered\n        this.setState({\n            hasError: true\n        })\n    }\n\n    render() { \n        if (this.state.hasError) {\n            return <h1>Ooopps. That is not good.</h1>\n        }\n        return this.props.children;\n    }\n}\n \nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css'\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nclass App extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchField: ''\n        }\n    }\n\n    componentDidMount() {\n        // fetch data from end point and update the state of robots\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(json => this.setState({\n                robots: json\n            }))\n    }\n\n    onSearchChange = (event) => {\n        // update searchField based on onChange input\n        this.setState({\n            searchField: event.target.value\n        })\n    }\n    \n    render() {\n\n        const { robots, searchField } = this.state;\n        // filter robot based on searchField\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLocaleLowerCase().includes(\n                searchField.toLocaleLowerCase());\n        })\n\n        return !robots.length ?\n                <h1>Loading</h1>\n            : \n            (\n            <div className=\"tc\">\n                <h1 className=\"f1\">RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundary> \n                        {/* If anything in the Cardlist fails, ErrorBoundary will catch it and display our error message */}\n                        <CardList robots={filteredRobots}/>\n                    </ErrorBoundary>\n                </Scroll>\n            </div>\n        );\n    }\n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from '../src/containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}